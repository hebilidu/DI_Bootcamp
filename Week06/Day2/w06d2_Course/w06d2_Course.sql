-- select * FROM actors;
-- select first_name as nom from actors;
-- select avg(number_oscars) as all_oscars from actors;
-- select avg(number_oscars) from actors;
-- select count(*) from actors;
-- select min(number_oscars) from actors;
-- select * from actors where first_name not in ('Matt', 'George');
-- select * from actors where age between '1960-01-01' and  '1962-12-12';
-- INSERT INTO actors (first_name, last_name, age, number_oscars,gender) VALUES('Matt','Ross','03/01/1970', 0, 'M');
-- DELETE FROM actors WHERE actor_id = 10;
-- INSERT INTO actors (first_name, last_name, age, number_oscars,gender) VALUES('George','Clooney','06/05/1961', 1, 'M');
-- SELECT first_name, last_name , sum(number_oscars) FROM actors GROUP BY first_name, last_name;
-- DELETE FROM actors WHERE last_name = 'Ross' RETURNING actor_id, first_name, last_name;
-- ALTER TABLE actors RENAME COLUMN age to birthdate;
-- ALTER TABLE actors ADD COLUMN test INTEGER;
-- ALTER TABLE actors DROP test;
-- CREATE TABLE movies(
-- movie_id SERIAL,
-- movie_title VARCHAR (50) NOT NULL,
-- movie_story TEXT,
-- actor_playing_id INTEGER,
-- PRIMARY KEY (movie_id),
-- FOREIGN KEY (actor_playing_id) REFERENCES actors (actor_id)
-- );
-- INSERT INTO movies (movie_title, movie_story, actor_playing_id) VALUES
--     ( 'Good Will Hunting', 
--     'Written by Affleck and Damon, the film follows 20-year-old South Boston janitor Will Hunting',
--     (SELECT actor_id from actors WHERE first_name='Matt' AND last_name='Damon')),
--     ( 'Oceans Eleven', 
--     'American heist film directed by Steven Soderbergh and written by Ted Griffin.', 
--     (SELECT actor_id from actors WHERE first_name='Matt' AND last_name='Damon'));
-- select * from movies;
-- SELECT actors.first_name, actors.last_name, movies.movie_title
-- FROM actors
-- INNER JOIN movies
-- ON actors.actor_id = movies.actor_playing_id;
